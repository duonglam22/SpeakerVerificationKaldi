// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VoiceVerificationMessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_VoiceVerificationMessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_VoiceVerificationMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_VoiceVerificationMessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_VoiceVerificationMessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_VoiceVerificationMessage_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_VoiceVerificationMessage_2eproto_metadata_getter(int index);
class VoiceVerificationRequestMsg;
struct VoiceVerificationRequestMsgDefaultTypeInternal;
extern VoiceVerificationRequestMsgDefaultTypeInternal _VoiceVerificationRequestMsg_default_instance_;
class VoiceVerificationResponseMsg;
struct VoiceVerificationResponseMsgDefaultTypeInternal;
extern VoiceVerificationResponseMsgDefaultTypeInternal _VoiceVerificationResponseMsg_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::VoiceVerificationRequestMsg* Arena::CreateMaybeMessage<::VoiceVerificationRequestMsg>(Arena*);
template<> ::VoiceVerificationResponseMsg* Arena::CreateMaybeMessage<::VoiceVerificationResponseMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class VoiceVerificationRequestMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:VoiceVerificationRequestMsg) */ {
 public:
  inline VoiceVerificationRequestMsg() : VoiceVerificationRequestMsg(nullptr) {}
  virtual ~VoiceVerificationRequestMsg();
  explicit constexpr VoiceVerificationRequestMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VoiceVerificationRequestMsg(const VoiceVerificationRequestMsg& from);
  VoiceVerificationRequestMsg(VoiceVerificationRequestMsg&& from) noexcept
    : VoiceVerificationRequestMsg() {
    *this = ::std::move(from);
  }

  inline VoiceVerificationRequestMsg& operator=(const VoiceVerificationRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceVerificationRequestMsg& operator=(VoiceVerificationRequestMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceVerificationRequestMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VoiceVerificationRequestMsg* internal_default_instance() {
    return reinterpret_cast<const VoiceVerificationRequestMsg*>(
               &_VoiceVerificationRequestMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VoiceVerificationRequestMsg& a, VoiceVerificationRequestMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceVerificationRequestMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceVerificationRequestMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceVerificationRequestMsg* New() const final {
    return CreateMaybeMessage<VoiceVerificationRequestMsg>(nullptr);
  }

  VoiceVerificationRequestMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceVerificationRequestMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceVerificationRequestMsg& from);
  void MergeFrom(const VoiceVerificationRequestMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceVerificationRequestMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "VoiceVerificationRequestMsg";
  }
  protected:
  explicit VoiceVerificationRequestMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_VoiceVerificationMessage_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFileVerifyFieldNumber = 1,
    kPathFileTrainedFieldNumber = 2,
    kOptionsFieldNumber = 3,
  };
  // string path_file_verify = 1;
  void clear_path_file_verify();
  const std::string& path_file_verify() const;
  void set_path_file_verify(const std::string& value);
  void set_path_file_verify(std::string&& value);
  void set_path_file_verify(const char* value);
  void set_path_file_verify(const char* value, size_t size);
  std::string* mutable_path_file_verify();
  std::string* release_path_file_verify();
  void set_allocated_path_file_verify(std::string* path_file_verify);
  private:
  const std::string& _internal_path_file_verify() const;
  void _internal_set_path_file_verify(const std::string& value);
  std::string* _internal_mutable_path_file_verify();
  public:

  // string path_file_trained = 2;
  void clear_path_file_trained();
  const std::string& path_file_trained() const;
  void set_path_file_trained(const std::string& value);
  void set_path_file_trained(std::string&& value);
  void set_path_file_trained(const char* value);
  void set_path_file_trained(const char* value, size_t size);
  std::string* mutable_path_file_trained();
  std::string* release_path_file_trained();
  void set_allocated_path_file_trained(std::string* path_file_trained);
  private:
  const std::string& _internal_path_file_trained() const;
  void _internal_set_path_file_trained(const std::string& value);
  std::string* _internal_mutable_path_file_trained();
  public:

  // string options = 3;
  void clear_options();
  const std::string& options() const;
  void set_options(const std::string& value);
  void set_options(std::string&& value);
  void set_options(const char* value);
  void set_options(const char* value, size_t size);
  std::string* mutable_options();
  std::string* release_options();
  void set_allocated_options(std::string* options);
  private:
  const std::string& _internal_options() const;
  void _internal_set_options(const std::string& value);
  std::string* _internal_mutable_options();
  public:

  // @@protoc_insertion_point(class_scope:VoiceVerificationRequestMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_file_verify_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_file_trained_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr options_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_VoiceVerificationMessage_2eproto;
};
// -------------------------------------------------------------------

class VoiceVerificationResponseMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:VoiceVerificationResponseMsg) */ {
 public:
  inline VoiceVerificationResponseMsg() : VoiceVerificationResponseMsg(nullptr) {}
  virtual ~VoiceVerificationResponseMsg();
  explicit constexpr VoiceVerificationResponseMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VoiceVerificationResponseMsg(const VoiceVerificationResponseMsg& from);
  VoiceVerificationResponseMsg(VoiceVerificationResponseMsg&& from) noexcept
    : VoiceVerificationResponseMsg() {
    *this = ::std::move(from);
  }

  inline VoiceVerificationResponseMsg& operator=(const VoiceVerificationResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceVerificationResponseMsg& operator=(VoiceVerificationResponseMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceVerificationResponseMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VoiceVerificationResponseMsg* internal_default_instance() {
    return reinterpret_cast<const VoiceVerificationResponseMsg*>(
               &_VoiceVerificationResponseMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VoiceVerificationResponseMsg& a, VoiceVerificationResponseMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceVerificationResponseMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceVerificationResponseMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceVerificationResponseMsg* New() const final {
    return CreateMaybeMessage<VoiceVerificationResponseMsg>(nullptr);
  }

  VoiceVerificationResponseMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceVerificationResponseMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceVerificationResponseMsg& from);
  void MergeFrom(const VoiceVerificationResponseMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceVerificationResponseMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "VoiceVerificationResponseMsg";
  }
  protected:
  explicit VoiceVerificationResponseMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_VoiceVerificationMessage_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalInfoFieldNumber = 3,
    kErrorcodeFieldNumber = 1,
    kScoreFieldNumber = 2,
  };
  // string additionalInfo = 3;
  void clear_additionalinfo();
  const std::string& additionalinfo() const;
  void set_additionalinfo(const std::string& value);
  void set_additionalinfo(std::string&& value);
  void set_additionalinfo(const char* value);
  void set_additionalinfo(const char* value, size_t size);
  std::string* mutable_additionalinfo();
  std::string* release_additionalinfo();
  void set_allocated_additionalinfo(std::string* additionalinfo);
  private:
  const std::string& _internal_additionalinfo() const;
  void _internal_set_additionalinfo(const std::string& value);
  std::string* _internal_mutable_additionalinfo();
  public:

  // int32 errorcode = 1;
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float score = 2;
  void clear_score();
  float score() const;
  void set_score(float value);
  private:
  float _internal_score() const;
  void _internal_set_score(float value);
  public:

  // @@protoc_insertion_point(class_scope:VoiceVerificationResponseMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr additionalinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode_;
  float score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_VoiceVerificationMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoiceVerificationRequestMsg

// string path_file_verify = 1;
inline void VoiceVerificationRequestMsg::clear_path_file_verify() {
  path_file_verify_.ClearToEmpty();
}
inline const std::string& VoiceVerificationRequestMsg::path_file_verify() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationRequestMsg.path_file_verify)
  return _internal_path_file_verify();
}
inline void VoiceVerificationRequestMsg::set_path_file_verify(const std::string& value) {
  _internal_set_path_file_verify(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationRequestMsg.path_file_verify)
}
inline std::string* VoiceVerificationRequestMsg::mutable_path_file_verify() {
  // @@protoc_insertion_point(field_mutable:VoiceVerificationRequestMsg.path_file_verify)
  return _internal_mutable_path_file_verify();
}
inline const std::string& VoiceVerificationRequestMsg::_internal_path_file_verify() const {
  return path_file_verify_.Get();
}
inline void VoiceVerificationRequestMsg::_internal_set_path_file_verify(const std::string& value) {
  
  path_file_verify_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void VoiceVerificationRequestMsg::set_path_file_verify(std::string&& value) {
  
  path_file_verify_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:VoiceVerificationRequestMsg.path_file_verify)
}
inline void VoiceVerificationRequestMsg::set_path_file_verify(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_file_verify_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:VoiceVerificationRequestMsg.path_file_verify)
}
inline void VoiceVerificationRequestMsg::set_path_file_verify(const char* value,
    size_t size) {
  
  path_file_verify_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:VoiceVerificationRequestMsg.path_file_verify)
}
inline std::string* VoiceVerificationRequestMsg::_internal_mutable_path_file_verify() {
  
  return path_file_verify_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* VoiceVerificationRequestMsg::release_path_file_verify() {
  // @@protoc_insertion_point(field_release:VoiceVerificationRequestMsg.path_file_verify)
  return path_file_verify_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void VoiceVerificationRequestMsg::set_allocated_path_file_verify(std::string* path_file_verify) {
  if (path_file_verify != nullptr) {
    
  } else {
    
  }
  path_file_verify_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path_file_verify,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:VoiceVerificationRequestMsg.path_file_verify)
}

// string path_file_trained = 2;
inline void VoiceVerificationRequestMsg::clear_path_file_trained() {
  path_file_trained_.ClearToEmpty();
}
inline const std::string& VoiceVerificationRequestMsg::path_file_trained() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationRequestMsg.path_file_trained)
  return _internal_path_file_trained();
}
inline void VoiceVerificationRequestMsg::set_path_file_trained(const std::string& value) {
  _internal_set_path_file_trained(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationRequestMsg.path_file_trained)
}
inline std::string* VoiceVerificationRequestMsg::mutable_path_file_trained() {
  // @@protoc_insertion_point(field_mutable:VoiceVerificationRequestMsg.path_file_trained)
  return _internal_mutable_path_file_trained();
}
inline const std::string& VoiceVerificationRequestMsg::_internal_path_file_trained() const {
  return path_file_trained_.Get();
}
inline void VoiceVerificationRequestMsg::_internal_set_path_file_trained(const std::string& value) {
  
  path_file_trained_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void VoiceVerificationRequestMsg::set_path_file_trained(std::string&& value) {
  
  path_file_trained_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:VoiceVerificationRequestMsg.path_file_trained)
}
inline void VoiceVerificationRequestMsg::set_path_file_trained(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_file_trained_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:VoiceVerificationRequestMsg.path_file_trained)
}
inline void VoiceVerificationRequestMsg::set_path_file_trained(const char* value,
    size_t size) {
  
  path_file_trained_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:VoiceVerificationRequestMsg.path_file_trained)
}
inline std::string* VoiceVerificationRequestMsg::_internal_mutable_path_file_trained() {
  
  return path_file_trained_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* VoiceVerificationRequestMsg::release_path_file_trained() {
  // @@protoc_insertion_point(field_release:VoiceVerificationRequestMsg.path_file_trained)
  return path_file_trained_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void VoiceVerificationRequestMsg::set_allocated_path_file_trained(std::string* path_file_trained) {
  if (path_file_trained != nullptr) {
    
  } else {
    
  }
  path_file_trained_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path_file_trained,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:VoiceVerificationRequestMsg.path_file_trained)
}

// string options = 3;
inline void VoiceVerificationRequestMsg::clear_options() {
  options_.ClearToEmpty();
}
inline const std::string& VoiceVerificationRequestMsg::options() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationRequestMsg.options)
  return _internal_options();
}
inline void VoiceVerificationRequestMsg::set_options(const std::string& value) {
  _internal_set_options(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationRequestMsg.options)
}
inline std::string* VoiceVerificationRequestMsg::mutable_options() {
  // @@protoc_insertion_point(field_mutable:VoiceVerificationRequestMsg.options)
  return _internal_mutable_options();
}
inline const std::string& VoiceVerificationRequestMsg::_internal_options() const {
  return options_.Get();
}
inline void VoiceVerificationRequestMsg::_internal_set_options(const std::string& value) {
  
  options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void VoiceVerificationRequestMsg::set_options(std::string&& value) {
  
  options_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:VoiceVerificationRequestMsg.options)
}
inline void VoiceVerificationRequestMsg::set_options(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:VoiceVerificationRequestMsg.options)
}
inline void VoiceVerificationRequestMsg::set_options(const char* value,
    size_t size) {
  
  options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:VoiceVerificationRequestMsg.options)
}
inline std::string* VoiceVerificationRequestMsg::_internal_mutable_options() {
  
  return options_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* VoiceVerificationRequestMsg::release_options() {
  // @@protoc_insertion_point(field_release:VoiceVerificationRequestMsg.options)
  return options_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void VoiceVerificationRequestMsg::set_allocated_options(std::string* options) {
  if (options != nullptr) {
    
  } else {
    
  }
  options_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), options,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:VoiceVerificationRequestMsg.options)
}

// -------------------------------------------------------------------

// VoiceVerificationResponseMsg

// int32 errorcode = 1;
inline void VoiceVerificationResponseMsg::clear_errorcode() {
  errorcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VoiceVerificationResponseMsg::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VoiceVerificationResponseMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationResponseMsg.errorcode)
  return _internal_errorcode();
}
inline void VoiceVerificationResponseMsg::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  errorcode_ = value;
}
inline void VoiceVerificationResponseMsg::set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationResponseMsg.errorcode)
}

// float score = 2;
inline void VoiceVerificationResponseMsg::clear_score() {
  score_ = 0;
}
inline float VoiceVerificationResponseMsg::_internal_score() const {
  return score_;
}
inline float VoiceVerificationResponseMsg::score() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationResponseMsg.score)
  return _internal_score();
}
inline void VoiceVerificationResponseMsg::_internal_set_score(float value) {
  
  score_ = value;
}
inline void VoiceVerificationResponseMsg::set_score(float value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationResponseMsg.score)
}

// string additionalInfo = 3;
inline void VoiceVerificationResponseMsg::clear_additionalinfo() {
  additionalinfo_.ClearToEmpty();
}
inline const std::string& VoiceVerificationResponseMsg::additionalinfo() const {
  // @@protoc_insertion_point(field_get:VoiceVerificationResponseMsg.additionalInfo)
  return _internal_additionalinfo();
}
inline void VoiceVerificationResponseMsg::set_additionalinfo(const std::string& value) {
  _internal_set_additionalinfo(value);
  // @@protoc_insertion_point(field_set:VoiceVerificationResponseMsg.additionalInfo)
}
inline std::string* VoiceVerificationResponseMsg::mutable_additionalinfo() {
  // @@protoc_insertion_point(field_mutable:VoiceVerificationResponseMsg.additionalInfo)
  return _internal_mutable_additionalinfo();
}
inline const std::string& VoiceVerificationResponseMsg::_internal_additionalinfo() const {
  return additionalinfo_.Get();
}
inline void VoiceVerificationResponseMsg::_internal_set_additionalinfo(const std::string& value) {
  
  additionalinfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void VoiceVerificationResponseMsg::set_additionalinfo(std::string&& value) {
  
  additionalinfo_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:VoiceVerificationResponseMsg.additionalInfo)
}
inline void VoiceVerificationResponseMsg::set_additionalinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  additionalinfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:VoiceVerificationResponseMsg.additionalInfo)
}
inline void VoiceVerificationResponseMsg::set_additionalinfo(const char* value,
    size_t size) {
  
  additionalinfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:VoiceVerificationResponseMsg.additionalInfo)
}
inline std::string* VoiceVerificationResponseMsg::_internal_mutable_additionalinfo() {
  
  return additionalinfo_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* VoiceVerificationResponseMsg::release_additionalinfo() {
  // @@protoc_insertion_point(field_release:VoiceVerificationResponseMsg.additionalInfo)
  return additionalinfo_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void VoiceVerificationResponseMsg::set_allocated_additionalinfo(std::string* additionalinfo) {
  if (additionalinfo != nullptr) {
    
  } else {
    
  }
  additionalinfo_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), additionalinfo,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:VoiceVerificationResponseMsg.additionalInfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_VoiceVerificationMessage_2eproto
