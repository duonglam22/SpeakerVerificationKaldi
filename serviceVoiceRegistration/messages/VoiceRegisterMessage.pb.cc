// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VoiceRegisterMessage.proto

#include "VoiceRegisterMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr VoiceRegisterRequestMsg::VoiceRegisterRequestMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0){}
struct VoiceRegisterRequestMsgDefaultTypeInternal {
  constexpr VoiceRegisterRequestMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VoiceRegisterRequestMsgDefaultTypeInternal() {}
  union {
    VoiceRegisterRequestMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VoiceRegisterRequestMsgDefaultTypeInternal _VoiceRegisterRequestMsg_default_instance_;
constexpr VoiceRegisterResponseMsg::VoiceRegisterResponseMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : additionalinfo_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , errorcode_(0){}
struct VoiceRegisterResponseMsgDefaultTypeInternal {
  constexpr VoiceRegisterResponseMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VoiceRegisterResponseMsgDefaultTypeInternal() {}
  union {
    VoiceRegisterResponseMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VoiceRegisterResponseMsgDefaultTypeInternal _VoiceRegisterResponseMsg_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_VoiceRegisterMessage_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_VoiceRegisterMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_VoiceRegisterMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_VoiceRegisterMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterRequestMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterRequestMsg, path_file_),
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterRequestMsg, type_),
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterRequestMsg, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterResponseMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterResponseMsg, errorcode_),
  PROTOBUF_FIELD_OFFSET(::VoiceRegisterResponseMsg, additionalinfo_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::VoiceRegisterRequestMsg)},
  { 8, -1, sizeof(::VoiceRegisterResponseMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_VoiceRegisterRequestMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_VoiceRegisterResponseMsg_default_instance_),
};

const char descriptor_table_protodef_VoiceRegisterMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032VoiceRegisterMessage.proto\"K\n\027VoiceReg"
  "isterRequestMsg\022\021\n\tpath_file\030\001 \001(\t\022\014\n\004ty"
  "pe\030\002 \001(\005\022\017\n\007options\030\003 \001(\t\"E\n\030VoiceRegist"
  "erResponseMsg\022\021\n\terrorcode\030\001 \001(\005\022\026\n\016addi"
  "tionalInfo\030\002 \001(\t2\\\n\022RegisterMsgService\022F"
  "\n\rregisterVoice\022\030.VoiceRegisterRequestMs"
  "g\032\031.VoiceRegisterResponseMsg\"\000B:\n com.vn"
  "ptpay.voiceverify.messagesB\024VoiceRegiste"
  "rMessageP\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_VoiceRegisterMessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_VoiceRegisterMessage_2eproto = {
  false, false, 338, descriptor_table_protodef_VoiceRegisterMessage_2eproto, "VoiceRegisterMessage.proto", 
  &descriptor_table_VoiceRegisterMessage_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_VoiceRegisterMessage_2eproto::offsets,
  file_level_metadata_VoiceRegisterMessage_2eproto, file_level_enum_descriptors_VoiceRegisterMessage_2eproto, file_level_service_descriptors_VoiceRegisterMessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_VoiceRegisterMessage_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_VoiceRegisterMessage_2eproto);
  return descriptor_table_VoiceRegisterMessage_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_VoiceRegisterMessage_2eproto(&descriptor_table_VoiceRegisterMessage_2eproto);

// ===================================================================

class VoiceRegisterRequestMsg::_Internal {
 public:
};

VoiceRegisterRequestMsg::VoiceRegisterRequestMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:VoiceRegisterRequestMsg)
}
VoiceRegisterRequestMsg::VoiceRegisterRequestMsg(const VoiceRegisterRequestMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path_file().empty()) {
    path_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path_file(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:VoiceRegisterRequestMsg)
}

void VoiceRegisterRequestMsg::SharedCtor() {
path_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_ = 0;
}

VoiceRegisterRequestMsg::~VoiceRegisterRequestMsg() {
  // @@protoc_insertion_point(destructor:VoiceRegisterRequestMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceRegisterRequestMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VoiceRegisterRequestMsg::ArenaDtor(void* object) {
  VoiceRegisterRequestMsg* _this = reinterpret_cast< VoiceRegisterRequestMsg* >(object);
  (void)_this;
}
void VoiceRegisterRequestMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceRegisterRequestMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VoiceRegisterRequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceRegisterRequestMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_file_.ClearToEmpty();
  options_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceRegisterRequestMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path_file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "VoiceRegisterRequestMsg.path_file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "VoiceRegisterRequestMsg.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceRegisterRequestMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:VoiceRegisterRequestMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path_file = 1;
  if (this->path_file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path_file().data(), static_cast<int>(this->_internal_path_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "VoiceRegisterRequestMsg.path_file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path_file(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // string options = 3;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "VoiceRegisterRequestMsg.options");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceRegisterRequestMsg)
  return target;
}

size_t VoiceRegisterRequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceRegisterRequestMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path_file = 1;
  if (this->path_file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path_file());
  }

  // string options = 3;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceRegisterRequestMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceRegisterRequestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceRegisterRequestMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceRegisterRequestMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceRegisterRequestMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceRegisterRequestMsg)
    MergeFrom(*source);
  }
}

void VoiceRegisterRequestMsg::MergeFrom(const VoiceRegisterRequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceRegisterRequestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path_file().size() > 0) {
    _internal_set_path_file(from._internal_path_file());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void VoiceRegisterRequestMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceRegisterRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceRegisterRequestMsg::CopyFrom(const VoiceRegisterRequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceRegisterRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceRegisterRequestMsg::IsInitialized() const {
  return true;
}

void VoiceRegisterRequestMsg::InternalSwap(VoiceRegisterRequestMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_file_.Swap(&other->path_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceRegisterRequestMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceRegisterResponseMsg::_Internal {
 public:
};

VoiceRegisterResponseMsg::VoiceRegisterResponseMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:VoiceRegisterResponseMsg)
}
VoiceRegisterResponseMsg::VoiceRegisterResponseMsg(const VoiceRegisterResponseMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  additionalinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_additionalinfo().empty()) {
    additionalinfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_additionalinfo(), 
      GetArena());
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:VoiceRegisterResponseMsg)
}

void VoiceRegisterResponseMsg::SharedCtor() {
additionalinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
errorcode_ = 0;
}

VoiceRegisterResponseMsg::~VoiceRegisterResponseMsg() {
  // @@protoc_insertion_point(destructor:VoiceRegisterResponseMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceRegisterResponseMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  additionalinfo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VoiceRegisterResponseMsg::ArenaDtor(void* object) {
  VoiceRegisterResponseMsg* _this = reinterpret_cast< VoiceRegisterResponseMsg* >(object);
  (void)_this;
}
void VoiceRegisterResponseMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceRegisterResponseMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VoiceRegisterResponseMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceRegisterResponseMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additionalinfo_.ClearToEmpty();
  errorcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceRegisterResponseMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 errorcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string additionalInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_additionalinfo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "VoiceRegisterResponseMsg.additionalInfo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceRegisterResponseMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:VoiceRegisterResponseMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_errorcode(), target);
  }

  // string additionalInfo = 2;
  if (this->additionalinfo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_additionalinfo().data(), static_cast<int>(this->_internal_additionalinfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "VoiceRegisterResponseMsg.additionalInfo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_additionalinfo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceRegisterResponseMsg)
  return target;
}

size_t VoiceRegisterResponseMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceRegisterResponseMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string additionalInfo = 2;
  if (this->additionalinfo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_additionalinfo());
  }

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_errorcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceRegisterResponseMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceRegisterResponseMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceRegisterResponseMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceRegisterResponseMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceRegisterResponseMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceRegisterResponseMsg)
    MergeFrom(*source);
  }
}

void VoiceRegisterResponseMsg::MergeFrom(const VoiceRegisterResponseMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceRegisterResponseMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.additionalinfo().size() > 0) {
    _internal_set_additionalinfo(from._internal_additionalinfo());
  }
  if (from.errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
}

void VoiceRegisterResponseMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceRegisterResponseMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceRegisterResponseMsg::CopyFrom(const VoiceRegisterResponseMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceRegisterResponseMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceRegisterResponseMsg::IsInitialized() const {
  return true;
}

void VoiceRegisterResponseMsg::InternalSwap(VoiceRegisterResponseMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  additionalinfo_.Swap(&other->additionalinfo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(errorcode_, other->errorcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceRegisterResponseMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::VoiceRegisterRequestMsg* Arena::CreateMaybeMessage< ::VoiceRegisterRequestMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::VoiceRegisterRequestMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::VoiceRegisterResponseMsg* Arena::CreateMaybeMessage< ::VoiceRegisterResponseMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::VoiceRegisterResponseMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
